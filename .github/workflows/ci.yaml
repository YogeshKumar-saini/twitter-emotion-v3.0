name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run pipeline
      env:
        DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT || '' }}
      run: |
        dvc repro
    - name: Run model tests
      env:
        DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      run: |
          python -m unittest tests/test_model.py

    - name: Promote model to production
      if: success()
      env:
        DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      run: python scripts/promote_model.py
    - name: Run Flask app tests
      if: success()
      env:
        DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      run: python -m unittest tests/test_flask_app.py
    
    - name: log in to Docker hub
      if: success()
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    
    - name: Build Docker image
      if: success()
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }} /emotion1v3:latest .
    
    - name: Push Docker image
      if: success()
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }} /emotion1v3:latest
 